from aiogram import types, Dispatcher, bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from create_bot import dp
import sqlite3

try:
    db = sqlite3.connect('./data/tdsgnBotBase.db')
    c = db.cursor()
except:
    pass

async def members_kb(message: types.Message):
    if(message.chat.type == 'private'):
        membersKeyboardList = []
        for el in c.execute("SELECT * FROM members WHERE TelegramID IS NULL").fetchall():
            membersKeyboardList.append(InlineKeyboardButton(el[1], callback_data=el[0]))
        membersKeyboard = InlineKeyboardMarkup(row_width=2)
        membersKeyboard.add(*membersKeyboardList)
        await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!\n–Ø –±–æ—Ç-–∫–∞–º–∏–∫–∞–¥–∑–µ. –°–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π Bitrix –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∫–∞—Ç–∏—Ç –∞–ø–¥–µ–π—Ç –¥–ª—è CRM, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–µ –∂–µ —Ñ—É–Ω–∫—Ü–∏–∏, —Ç–æ–ª—å–∫–æ –ª—É—á—à–µüòâ –ê –º–æ–π —Å–µ—Ä–≤–µ—Ä –æ—Ç–∫–ª—é—á–∞—Ç –∏ —è –ø–µ—Ä–µ—Å—Ç–∞–Ω—É —Ä–∞–±–æ—Ç–∞—Ç—å... \n\n –ù–æ –Ω–µ –±—É–¥–µ–º –æ –≥—Ä—É—Å—Ç–Ω–æ–º! –î–µ–ª–æ –≤ —Ç–æ–º, —á—Ç–æ –ø–æ–∫–∞ —Ç—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —è –Ω–µ –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å. –¢–∞–∫ —á—Ç–æ –¥–∞–≤–∞–π, –Ω–µ —É—Å—Ç—Ä–∞–∏–≤–∞–π –≥–æ–¥–∑–∏–ª—å–Ω–∏–∫ –∏ –Ω–∞–π–¥–∏ —Å–≤–æ—ë –∏–º—è –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.')
        await message.answer_sticker(r'CAACAgIAAxkBAAEGWNVjaUo4P20YoAcjmGvAlQHRP4ZcMgACJxgAApd54UvWARYS3sXfTysE')
        await message.answer('–ù–∞–π–¥–∏ —Å–µ–±—è: ', reply_markup=membersKeyboard)
    else:
        await message.answer('–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö')

@dp.callback_query_handler()
async def callback_kb(callback_query: types.CallbackQuery):
    try:
        c.execute("UPDATE members SET TelegramID = ? WHERE ID = ?", (callback_query.from_user.id, callback_query.data))
        db.commit()
        await callback_query.message.answer('–¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!\n –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É: /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é')
    except:
        await callback_query.message.answer('–¢—ã, –≤–∏–¥–∏–º–æ, —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ù—É –∏–ª–∏ –∫—Ç–æ-—Ç–æ –Ω–µ—Ö–æ—Ä–æ—à–∏–π —Å–¥–µ–ª–∞–ª —ç—Ç–æ –∑–∞ —Ç–µ–±—è. –ñ–º—è–∫–∞–π /help –∏ –¥–∞–≤–∞–π —Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å')
async def log_out(message: types.Message):
    if(message.chat.type == 'private'):
        c.execute("UPDATE members SET TelegramID = NULL WHERE TelegramID = ?", (message.from_user.id,))
        db.commit()
        await message.answer('–¢–µ–ø–µ—Ä—å —Ç—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ü–æ–∂–∞–ª—É–π, –Ω–∞–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –±—É–¥–µ—Ç –ª—É—á—à–µ –¥—Ä—É–≥ –±–µ–∑ –¥—Ä—É–≥–∞. \n\n–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /start —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ.\n\n ‚ö†Ô∏è –ò –ü–û–ú–ù–ò, –ø–æ–∫–∞ —Ç—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —è –Ω–µ –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å')
        await message.answer_photo(r'https://click-or-die.ru/wp-content/uploads/2020/12/4kaaagga0ua-960-680x524.jpg')
    else:
        await message.answer('–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö')

def register_handlers_members_kb(dp: Dispatcher):
    dp.register_message_handler(members_kb, commands=['start'])
    dp.register_message_handler(log_out, commands=['log_out'])
